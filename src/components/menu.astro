---
import { Icon } from "astro-icon";
import * as info from '~/data/general.md'
let { navigation, social } = info.frontmatter
---
<script>
import MicroModal from "micromodal";
const opacity = ['opacity-0', 'opacity-100'];
const display = ['hidden', 'block'];
const id = 'menu-modal';
const menu = document.querySelector(`#${id} ul`);
const menuModal = document.querySelector(`#${id}`);

// functions to open/close Modals
const openModal = () => {
	display.forEach(e => menuModal.classList.toggle(e));
	setTimeout(() => {
			opacity.forEach(e => menuModal.classList.toggle(e));
	}, 1)
	MicroModal.show(id, { disableScroll: true });
};

const closeModal = () => {
	opacity.forEach(e => menuModal.classList.toggle(e));
	setTimeout(() => {
		display.forEach(e => menuModal.classList.toggle(e));
	}, 200)
	MicroModal.close(id);
};

// event listeners
document.querySelector("#open-nav-button").addEventListener("click", openModal);
document.querySelector("#close-nav-button").addEventListener("click", closeModal);

menu.addEventListener("click", (event) => {
(event.target as HTMLElement).tagName === "BUTTON" ? closeModal() : null;
});

</script>
<style>
	#menu-modal {
		background-size: cover;
		position: fixed;
		top: 0;
		transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1);
		width: 100vw;
		height: 100vh;
		z-index: 100;
		text-transform: uppercase;
	}
	.opacity-0 {
		opacity: 0;
	}
	.opacity-100 {
		opacity: 1;
	}
	.hidden {
		display: none;
	}
	button {
		color: white;
		text-transform: uppercase;
		margin: 0 auto;
	}
	#socials {
		display: flex;
		justify-content: center;
	}
	[astro-icon] {
		height: 3rem;
		color: white;
	}
	[astro-icon]:hover {
		height: 3rem;
		color: var(--color-primary);
	}
	#menu-content {
		position: fixed;
		inset: 0px;
		padding: 1rem 2rem;
		overflow: auto;
	}
	button {
		padding: 1rem 0;
		font-size: clamp(1.423828125rem, calc(1.423828125rem + ((1.7999999999999998 - 1.423828125) * ((100vw - 20rem) / (96 - 20)))), 1.7999999999999998rem);
    line-height: 1.2;
		text-align: center;
		width: 100%;
	}
	button:hover {
		color: var(--color-primary);
	}
	header {
		text-align: right;
	}
	header button {
		width: fit-content;
	}
</style>
<div
	id="menu-modal"
	class="modal opacity-0 hidden"
	aria-hidden="true"
	style="background: linear-gradient(45deg, rgba(0, 0, 0, .2), rgba(0, 0, 0, .2)), url('images/bgBlurry.jpg');">
	<div id="menu-content">
		<div role="dialog" aria-modal="true">
		<header>
			<button id="close-nav-button" aria-label="Close navigation">
			<Icon pack="mdi" name="close" />
			</button>
		</header>
		<nav>
			<ul>
			{
				navigation.map((item) => (
				<li>
					<button class="nav-item-modal" onclick={item.url}>
						{item.title}
					</button>
				</li>
				))
			}
			</ul>
			<ul id="socials">
				{
					social.map((item) => (
						<li>
							<a href={item.url} aria-label={item.title} target="_blank">
								<Icon name={item.icon}/>
							</a>
						</li>
					))
				}
			</ul>
		</nav>
		</div>
	</div>
</div>